{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/matheus/Documents/programas/dev oba-site/mobile/src/routes.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport FontAwesome5 from '@expo/vector-icons/FontAwesome5';\nimport AuthContext from \"./authcontext\";\nimport Products from \"./pages/ProductsTab/Products\";\nimport ProductDetails from \"./pages/ProductsTab/ProductDetails\";\nimport FinalizePurchase from \"./pages/ProductsTab/FinalizePurchase\";\nimport Purchases from \"./pages/Purchases\";\nimport Profile from \"./pages/Profile\";\nimport Login from \"./pages/Login/Login\";\nimport Register from \"./pages/Login/Register\";\nimport ForgotPassword from \"./pages/Login/ForgotPassword\";\nimport { set } from 'react-native-reanimated';\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nfunction ProductsTab() {\n  return React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Products\",\n    component: Products,\n    options: {\n      title: \"Produtos\",\n      headerTintColor: 'black',\n      headerStyle: {\n        backgroundColor: 'white'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ProductDetails\",\n    component: ProductDetails,\n    options: {\n      title: \"\",\n      headerTintColor: 'black',\n      headerStyle: {\n        backgroundColor: '#f2f2f2'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"FinalizePurchase\",\n    component: FinalizePurchase,\n    options: {\n      title: \"\",\n      headerTintColor: 'black',\n      headerStyle: {\n        backgroundColor: '#f2f2f2',\n        borderEndWidth: 0\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function Routes() {\n  var _React$useReducer = React.useReducer(function (prevState, action) {\n    switch (action.type) {\n      case 'RESTORE_TOKEN':\n        return _objectSpread({}, prevState, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'SIGN_IN':\n        return _objectSpread({}, prevState, {\n          isSignout: false,\n          userToken: action.token\n        });\n\n      case 'SIGN_OUT':\n        return _objectSpread({}, prevState, {\n          isSignout: true,\n          userToken: null\n        });\n    }\n  }, {\n    isLoading: true,\n    isSignout: false,\n    userToken: null\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  React.useEffect(function () {\n    var bootstrapAsync = function bootstrapAsync() {\n      var userToken;\n      return _regeneratorRuntime.async(function bootstrapAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userID'));\n\n            case 3:\n              userToken = _context.sent;\n              _context.next = 8;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 8:\n              dispatch({\n                type: 'RESTORE_TOKEN',\n                token: userToken\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    bootstrapAsync();\n  }, []);\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(data) {\n        return _regeneratorRuntime.async(function signIn$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch({\n                  type: 'SIGN_IN',\n                  token: 'dummy-auth-token'\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      signOut: function signOut() {\n        return dispatch({\n          type: 'SIGN_OUT'\n        });\n      },\n      signUp: function signUp(data) {\n        return _regeneratorRuntime.async(function signUp$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                dispatch({\n                  type: 'SIGN_IN',\n                  token: 'dummy-auth-token'\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    };\n  }, []);\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, state.userToken == null ? React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ForgotPassword\",\n    component: ForgotPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: Register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  })) : React.createElement(Tab.Navigator, {\n    initialRouteName: \"Produtos\",\n    backBehavior: \"history\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n          var style;\n\n          if (route.name === 'Produtos') {\n            iconName = 'store-alt';\n            style = 'light';\n          } else if (route.name === 'Pedidos') {\n            iconName = 'clipboard';\n            style = focused ? 'solid' : 'light';\n          } else if (route.name === 'Perfil') {\n            iconName = 'user';\n            style = focused ? 'solid' : 'light';\n          }\n\n          if (style === 'solid') return React.createElement(FontAwesome5, {\n            name: iconName,\n            size: size,\n            color: color,\n            solid: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 28\n            }\n          });else return React.createElement(FontAwesome5, {\n            name: iconName,\n            size: size,\n            color: color,\n            light: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 28\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: '#049434',\n      inactiveTintColor: 'gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Produtos\",\n    component: ProductsTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Pedidos\",\n    component: Purchases,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Perfil\",\n    component: Profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/matheus/Documents/programas/dev oba-site/mobile/src/routes.js"],"names":["React","NavigationContainer","createBottomTabNavigator","createStackNavigator","FontAwesome5","AuthContext","Products","ProductDetails","FinalizePurchase","Purchases","Profile","Login","Register","ForgotPassword","set","Tab","Stack","ProductsTab","title","headerTintColor","headerStyle","backgroundColor","borderEndWidth","Routes","useReducer","prevState","action","type","userToken","token","isLoading","isSignout","state","dispatch","useEffect","bootstrapAsync","AsyncStorage","getItem","authContext","useMemo","signIn","data","signOut","signUp","headerShown","route","tabBarIcon","focused","color","size","iconName","style","name","activeTintColor","inactiveTintColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { AsyncStorage } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport FontAwesome5 from '@expo/vector-icons/FontAwesome5'\nimport AuthContext from './authcontext';\n\nimport Products from './pages/ProductsTab/Products';\nimport ProductDetails from './pages/ProductsTab/ProductDetails';\nimport FinalizePurchase from './pages/ProductsTab/FinalizePurchase';\nimport Purchases from './pages/Purchases';\nimport Profile from './pages/Profile';\nimport Login from './pages/Login/Login'\nimport Register from './pages/Login/Register'\nimport ForgotPassword from './pages/Login/ForgotPassword'\nimport { set } from 'react-native-reanimated';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\nfunction ProductsTab() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Products\"\n        component={Products}\n        options={{\n          title: \"Produtos\",\n          headerTintColor: 'black',\n          headerStyle: {\n            backgroundColor: 'white',\n          },\n        }}\n      />\n      <Stack.Screen\n        name=\"ProductDetails\"\n        component={ProductDetails}\n        options={{\n          title: \"\",\n          headerTintColor: 'black',\n          headerStyle: {\n            backgroundColor: '#f2f2f2',\n          },\n        }}\n      />\n      <Stack.Screen\n        name=\"FinalizePurchase\"\n        component={FinalizePurchase}\n        options={{\n          title: \"\",\n          headerTintColor: 'black',\n          headerStyle: {\n            backgroundColor: '#f2f2f2',\n            borderEndWidth: 0\n          },\n        }}\n      />\n\n    </Stack.Navigator>\n  );\n}\n\n\nexport default function Routes() {\n\n  const [state, dispatch] = React.useReducer(\n    (prevState, action) => {\n      switch (action.type) {\n        case 'RESTORE_TOKEN':\n          return {\n            ...prevState,\n            userToken: action.token,\n            isLoading: false,\n          };\n        case 'SIGN_IN':\n          return {\n            ...prevState,\n            isSignout: false,\n            userToken: action.token,\n          };\n        case 'SIGN_OUT':\n          return {\n            ...prevState,\n            isSignout: true,\n            userToken: null,\n          };\n      }\n    },\n    {\n      isLoading: true,\n      isSignout: false,\n      userToken: null,\n    }\n  );\n\n  React.useEffect(() => {\n    // Fetch the token from storage then navigate to our appropriate place\n    const bootstrapAsync = async () => {\n      let userToken;\n\n      try {\n        userToken = await AsyncStorage.getItem('userID');\n      } catch (e) {\n        // Restoring token failed\n      }\n\n      // After restoring token, we may need to validate it in production apps\n\n      // This will switch to the App screen or Auth screen and this loading\n      // screen will be unmounted and thrown away.\n      dispatch({ type: 'RESTORE_TOKEN', token: userToken });\n    };\n\n    bootstrapAsync();\n  }, []);\n\n  const authContext = React.useMemo(\n    () => ({\n      signIn: async data => {\n        // In a production app, we need to send some data (usually username, password) to server and get a token\n        // We will also need to handle errors if sign in failed\n        // After getting token, we need to persist the token using `AsyncStorage`\n        // In the example, we'll use a dummy token\n\n        dispatch({ type: 'SIGN_IN', token: 'dummy-auth-token' });\n      },\n      signOut: () => dispatch({ type: 'SIGN_OUT' }),\n      signUp: async data => {\n        // In a production app, we need to send user data to server and get a token\n        // We will also need to handle errors if sign up failed\n        // After getting token, we need to persist the token using `AsyncStorage`\n        // In the example, we'll use a dummy token\n\n        dispatch({ type: 'SIGN_IN', token: 'dummy-auth-token' });\n      },\n    }),\n    []\n  );\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <NavigationContainer>\n        {state.userToken == null ? (\n          <Stack.Navigator\n            screenOptions={{\n              headerShown: false\n            }}>\n            <Stack.Screen\n              name=\"Login\"\n              component={Login}\n            />\n            <Stack.Screen\n              name=\"ForgotPassword\"\n              component={ForgotPassword}\n            />\n            <Stack.Screen\n              name=\"Register\"\n              component={Register}\n            />\n\n          </Stack.Navigator>\n        ) : (\n            <Tab.Navigator\n              initialRouteName=\"Produtos\"\n              backBehavior=\"history\"\n              screenOptions={({ route }) => ({\n                tabBarIcon: ({ focused, color, size }) => {\n                  let iconName;\n                  let style;\n\n                  if (route.name === 'Produtos') {\n                    iconName = 'store-alt';\n                    style = 'light'\n                  } else if (route.name === 'Pedidos') {\n                    iconName = 'clipboard';\n                    style = focused ? 'solid' : 'light'\n                  } else if (route.name === 'Perfil') {\n                    iconName = 'user';\n                    style = focused ? 'solid' : 'light'\n\n\n                  }\n                  if (style === 'solid')\n                    return <FontAwesome5 name={iconName} size={size} color={color} solid />;\n                  else\n                    return <FontAwesome5 name={iconName} size={size} color={color} light />;\n\n                },\n              })}\n              tabBarOptions={{\n                activeTintColor: '#049434',\n                inactiveTintColor: 'gray',\n              }}\n            >\n              <Tab.Screen name=\"Produtos\" component={ProductsTab} />\n              <Tab.Screen name=\"Pedidos\" component={Purchases} />\n              <Tab.Screen name=\"Perfil\" component={Profile} />\n            </Tab.Navigator>\n          )}\n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}